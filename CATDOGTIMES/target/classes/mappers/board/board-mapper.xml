<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.catdog.times.board.model.mapper.BoardMapper">
	<sql id="boardListSql">
		SELECT  A.BOARD_NO
		      , A.BOARD_TITLE
			  , B.MEMBER_ID
			  , A.BOARD_READCOUNT
			  , A.BOARD_ORIGINAL_FILENAME
			  , A.BOARD_RENAMED_FILENAME
			  , A.BOARD_CREATE_DATE
		  FROM BOARD A
	 LEFT JOIN MEMBER B
		    ON A.BOARD_WRITER_NO = B.MEMBER_NO
		 WHERE A.BOARD_STATUS = 'Y'
	</sql>
	
	<resultMap type="Board" id="boardListResultMap">
		<id property="no" column="BOARD_NO"/>
		<result property="title" column="BOARD_TITLE"/>
		<result property="writerId" column="MEMBER_ID"/>
		<result property="readCount" column="BOARD_READCOUNT"/>
		<result property="originalFileName" column="BOARD_ORIGINAL_FILENAME"/>
		<result property="renamedFileName" column="BOARD_RENAMED_FILENAME"/>
		<result property="createDate" column="BOARD_CREATE_DATE"/>
	</resultMap>
	
	<resultMap type="Board" id="boardDetailResultMap" extends="boardListResultMap">
		<result property="content" column="BOARD_CONTENT"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<!--<collection property="replies" javaType="arraylist" columnPrefix="R_" resultMap="replyResultMap"/>-->
	</resultMap>
	
	<!--기존 <resultMap type="Reply" id="replyResultMap">
		<id property="no" column="BOARD_NO"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="writerId" column="MEMBER_ID"/>
		<result property="content" column="BOARD_CONTENT"/>
		<result property="createDate" column="BOARD_CREATE_DATE"/>
		<result property="modifyDate" column="BOARD_MODIFY_DATE"/>
	</resultMap>-->

	<resultMap type="Reply" id="replyResultMap">
		<id property="no" column="REPLY_NO"/>
		<result property="boardNo" column="REPLY_BOARD_NO"/>
		<result property="writerId" column="MEMBER_ID"/>
		<result property="content" column="REPLY_CONTENT"/>
		<result property="createDate" column="REPLY_CREATE_DATE"/>
		<result property="modifyDate" column="REPLY_MODIFY_DATE"/>
		<result property="parent" column="REPLY_PARENT"/>
		<result property="depth" column="REPLY_DEPTH"/>
		<result property="order" column="REPLY_ORDER"/>
	</resultMap>

	<!-- 게시글 목록 조회(전체 목록) -->
	<select id="selectBoardCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD WHERE BOARD_STATUS='Y'
	</select>

	<select id="selectAll" resultMap="boardListResultMap">
		<include refid="boardListSql" />
		ORDER BY A.BOARD_NO DESC
	</select>
	
	<!-- 게시글 목록 조회(검색 기능 적용) -->
	<select id="selectBoardCountByKeyWord" resultType="_int">
		SELECT COUNT(*) 
		FROM BOARD B
		JOIN MEMBER M ON (B.BOARD_WRITER_NO = M.MEMBER_NO)
		WHERE B.STATUS='Y'
		<if test="writer != null">
			AND M.MEMBER_ID LIKE '%' || #{writer} || '%'
		</if>
		<if test="title != null">
			AND B.BOARD_TITLE LIKE '%' || #{title} || '%'
		</if>
		<if test="content != null">
			AND B.BOARD_CONTENT LIKE '%' || #{content} || '%'
		</if>
	</select>
	
	<select id="selectBoardListByKeyWord" resultMap="boardListResultMap">
		SELECT  B.BOARD_NO,
				B.BOARD_TITLE,
				M.MEMBER_ID,
				B.BOARD_READCOUNT,
				B.BOARD_ORIGINAL_FILENAME,
				B.BOARD_RENAMED_FILENAME,
				B.BOARD_CREATE_DATE
		FROM BOARD B
		JOIN MEMBER M ON(B.BOARD_WRITER_NO = M.MEMBER_NO)
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="writer != null">
				M.MEMBER_ID LIKE '%' || #{writer} || '%'
			</if>
			<if test="title != null">
				AND B.BOARD_TITLE LIKE '%' || #{title} || '%'
			</if>
			<if test="content != null">
				AND B.BOARD_CONTENT LIKE '%' || #{content} || '%'
			</if>
			AND B.BOARD_STATUS = 'Y'
		</trim>
		ORDER BY B.BOARD_NO DESC
	</select>

	<!-- 게시글 목록 조회(필터 기능 적용) -->
<!--	<select id="selectBoardCountByFilters" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS='Y'
		<if test="filters != null">
			AND TYPE IN
			<foreach collection="filters" item="filter" open="(" separator="," close=")">
				#{filter}
			</foreach>
		</if>
	</select>

	<select id="selectBoardListByFilters" resultMap="boardListResultMap">
		<include refid="boardListSql" />
		<if test="filters != null">
			AND B.TYPE IN
			<foreach collection="filters" item="filter" open="(" separator="," close=")">
				#{filter}
			</foreach>
		</if>
		ORDER BY B.NO DESC
	</select>-->
	<!-- 게시글 상세 조회(댓글 포함) -->
	<select id="selectBoardByNo" parameterType="_int" resultMap="boardDetailResultMap">
		SELECT B.BOARD_NO
		     , B.BOARD_TITLE
			 , M.MEMBER_ID
			 , B.BOARD_READCOUNT
			 , B.BOARD_ORIGINAL_FILENAME
			 , B.BOARD_RENAMED_FILENAME
			 , B.BOARD_CONTENT
			 , B.BOARD_CREATE_DATE
			 , B.BOARD_MODIFY_DATE
		  FROM BOARD B
		  JOIN MEMBER M ON(B.BOARD_WRITER_NO = M.MEMBER_NO)
		 WHERE B.BOARD_STATUS = 'Y' AND B.BOARD_NO = #{no}
	</select>

	<!-- 게시글 상세 조회(댓글 포함) -->
	<!--<select id="selectBoardByNo" parameterType="_int" resultMap="boardDetailResultMap">
		SELECT B.BOARD_NO,
		       B.BOARD_TITLE,
		       M.MEMBER_ID,
		       B.BOARD_READCOUNT,
		       B.BOARD_ORIGINAL_FILENAME,
		       B.BOARD_RENAMED_FILENAME,
		       B.BOARD_CONTENT,
		       B.BOARD_CREATE_DATE,
		       B.BOARD_MODIFY_DATE,
		       R.REPLY_NO AS "R_NO",
		       R.REPLY_BOARD_NO AS "R_BOARD_NO",
		       R.REPLY_CONTENT AS "R_CONTENT",
		       M2.MEMBER_ID AS "R_ID",
		       R.REPLY_CREATE_DATE AS "R_CREATE_DATE",
		       R.REPLY_MODIFY_DATE AS "R_MODIFY_DATE"
		FROM BOARD B
		JOIN MEMBER M ON(B.BOARD_WRITER_NO = M.MEMBER_NO)
		LEFT JOIN REPLY R ON(B.BOARD_NO = R.REPLY_BOARD_NO)
		LEFT JOIN MEMBER M2 ON(R.REPLY_WRITER_NO = M2.MEMBER_NO)
		WHERE B.BOARD_STATUS = 'Y' AND B.BOARD_NO = #{no}
	</select>-->

	<!-- 게시글 등록 테스트 -->
	<insert id="insertBoard" parameterType="Board"
		useGeneratedKeys="true" keyProperty="no" keyColumn="BOARD_NO">
		INSERT INTO BOARD (
			BOARD_NO,
			BOARD_WRITER_NO,
			BOARD_TITLE,
			BOARD_CONTENT,
			BOARD_ORIGINAL_FILENAME,
			BOARD_RENAMED_FILENAME,
			BOARD_READCOUNT,
			BOARD_STATUS,
			BOARD_CREATE_DATE,
			BOARD_MODIFY_DATE
		)
		VALUES(
			SEQ_BOARD_NO.NEXTVAL,
			#{writerNo},
			#{title},
			#{content},
			#{originalFileName},
			#{renamedFileName},
			DEFAULT,
			DEFAULT,
			DEFAULT,
			DEFAULT
		)
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="Board">
		UPDATE BOARD 
		<trim prefix="SET" suffixOverrides=",">
			<if test="title != null">
				BOARD_TITLE = #{title},
			</if>
			<if test="content != null">
				BOARD_CONTENT = #{content},
			</if>
			<if test="originalFileName != null">
				BOARD_ORIGINAL_FILENAME = #{originalFileName},
			</if>
			<if test="renamedFileName != null">
				BOARD_RENAMED_FILENAME = #{renamedFileName},
			</if>
			BOARD_MODIFY_DATE = SYSDATE
		</trim>		
		WHERE BOARD_NO = #{no}
	</update>
	
	<!-- 게시글 삭제 -->
	<update id="updateStatus" parameterType="map">
		UPDATE BOARD
		   SET BOARD_STATUS = #{status}
		 WHERE BOARD_NO = #{no}
	</update>

	<!-- 댓글 -->

	<select id="selectReplyByBoardNo" resultType="hashmap" parameterType="_int" resultMap="replyResultMap">
		SELECT R.REPLY_BOARD_NO
			 , R.REPLY_NO
			 , R.REPLY_DEPTH
			 , R.REPLY_MODIFY_DATE
			 , R.REPLY_CONTENT
			 , M.MEMBER_ID
		  FROM REPLY R
		  LEFT JOIN MEMBER M ON R.REPLY_WRITER_NO = M.MEMBER_NO
		 WHERE R.REPLY_BOARD_NO=#{boardNo}
		   AND R.REPLY_STATUS = 'Y'
		 ORDER BY R.REPLY_ORDER ASC
	</select>

	<select id="selectBoardReplyParent" resultType="Reply" parameterType="String" resultMap="replyResultMap">
		SELECT REPLY_BOARD_NO
		     , REPLY_DEPTH+1 REPLY_DEPTH
		     , REPLY_ORDER
		  FROM REPLY
		 WHERE REPLY_NO=#{parent}
	</select>

	<select id="selectBoardReplyMaxOrder" resultType="_int" parameterType="String">
		SELECT NVL(MAX(REPLY_ORDER),0)+1
		  FROM REPLY
		 WHERE REPLY_BOARD_NO=#{boardNo}
	</select>

	<update id="updateBoardReplyOrder" parameterType="Reply">
		UPDATE REPLY
		   SET REPLY_ORDER = REPLY_ORDER + 1
		 WHERE REPLY_BOARD_NO = #{boardNo}
		   AND REPLY_ORDER > #{order}
	</update>

	<insert id="insertBoardReply" parameterType="Reply" >
		<selectKey resultType="String" keyProperty="no" order="BEFORE">
			SELECT NVL(MAX(REPLY_NO), 0) + 1
			  FROM REPLY
			<!--SELECT (MAX(P_NO)) FROM MY_PLANNER-->
		</selectKey>

		INSERT INTO REPLY (
			  REPLY_NO
			, REPLY_BOARD_NO
			, REPLY_WRITER_NO
			, REPLY_CONTENT
			, REPLY_STATUS
			, REPLY_CREATE_DATE
			, REPLY_MODIFY_DATE
			, REPLY_ORDER
			, REPLY_PARENT
			, REPLY_DEPTH
		)
		VALUES (
			  #{no}
		    , #{boardNo}
		    , #{writerNo}
		    , #{content}
		    , 'Y'
			, DEFAULT
			, DEFAULT
			, #{order}
		    ,
		<choose>
			<when test="parent==null">#{no}, 0</when>
			<otherwise>#{parent}, #{depth}</otherwise>
		</choose>
		)
	</insert>
	<update id="updateBoardReply" parameterType="Reply">
		UPDATE REPLY
		   SET REPLY_CONTENT = #{content}
		 WHERE REPLY_NO = #{no}
	</update>

	<update id="deleteBoardReply" parameterType="String">
		UPDATE REPLY
		   SET REPLY_STATUS = 'N'
		 WHERE REPLY_NO = #{no}
	</update>
</mapper>